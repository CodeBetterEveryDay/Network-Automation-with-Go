# Play 1: Create an instance on AWS
- name: Create EC2 instance
  hosts: localhost
  become: false
  gather_facts: true
  vars_files:
    - ./vars/aws_common.yml

  roles:
      - { role: check_vars, when: not skip_check }
      - { role: install_dependencies, when: dependencies_check }

  tasks:
    - name: Check if we created the SSH key already
      ansible.builtin.stat:
        path: "{{ temp_dir }}/{{ ssh_key_filename }}"
      register: key

    - name: Create SSH KeyPair if not present
      block:
      - name: Generate an OpenSSH 4096-bit RSA SSH KeyPair
        community.crypto.openssh_keypair:
          path: "{{ ssh_key_filename }}"
        register: ssh

      - name: Copy public key to mount folder
        ansible.builtin.copy:
          src: "{{ ssh_key_filename }}.pub"
          dest: "{{ temp_dir }}"
          unsafe_writes: true
          mode: '0644'

      - name: Copy private key to mount folder
        ansible.builtin.copy:
          src: "{{ ssh_key_filename }}"
          dest: "{{ temp_dir }}"
          unsafe_writes: true
          mode: '0400'
      when: key.stat.exists is false

    - name: Store SSH pub Key in a fact
      ansible.builtin.set_fact:
        pub_key: "{{ lookup('file', path) }}"
      vars:
        path: "{{ temp_dir }}/{{ ssh_key_filename }}.pub"

    - name: Include Linux distribution variables
      ansible.builtin.include_vars: "./vars/aws_{{ ec2_distro }}.yml"

    - name: Create EC2 instance in AWS
      ansible.builtin.include_role:
        name: aws_create_ec2

    - name: Grab facts for the instance we just created
      amazon.aws.ec2_instance_info:
        region: "{{ ec2_region }}"
        filters:
          instance-state-name: running
          "tag:Name": "{{ ec2_name_tag }}"
      register: ansible_node_facts

    - name: Set facts for next play
      ansible.builtin.set_fact:
        instance_name: "{{ ec2_name_tag }}"

    - name: Add instance(s) to my_instances group
      ansible.builtin.add_host:
        name: "{{ item.tags.Name }}"
        ansible_host: "{{ item.public_dns_name }}"
        ansible_user: "{{ ec2_username }}"
        public_ip: "{{ item.public_ip_address }}"
        private_ip: "{{ item.private_ip_address }}"
        instance_name: "{{ ec2_resource_prefix }}"
        ansible_ssh_private_key_file: "{{ temp_dir }}/{{ ssh_key_filename }}"
        instance_ssh: "{{ ssh_info }}"
        instance_scp: "{{ scp_info }}"
        groups:
          - my_instances
      with_items: "{{ ansible_node_facts.instances }}"


# Play 2: Configure the instance we created
- name: Configure Instance(s)
  hosts: "my_instances"
  gather_facts: true
  vars_files:
    - ./vars/go_inputs.yml
    - ./vars/clab_inputs.yml

  pre_tasks:
    - name: Display variables/facts known for instance
      debug:
        msg: "Running {{ ansible_distribution }} {{ ansible_distribution_version }} ({{ ansible_os_family }}), IP address: {{ ansible_host }}"

  roles:
      - { role: configure_instance, become: true }

  tasks:
    - name: Print out instance information for the user
      ansible.builtin.debug:
        msg: 
        - "SSH: {{ hostvars[inventory_hostname]['instance_ssh'] }}"
        - "To upload cEOS image: {{ hostvars[inventory_hostname]['instance_scp'] }}"
      when: 
      - hostvars[inventory_hostname]['instance_ssh'] is defined
      - hostvars[inventory_hostname]['instance_scp'] is defined