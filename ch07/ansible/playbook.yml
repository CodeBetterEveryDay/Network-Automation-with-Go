- name: First Play - Configure Routers
  hosts: routers
  gather_facts: true
  vars:
    go: true

  tasks:
    # - name: Run Nokia compiled Go module on remote system without Go installed
    #   go_srl:
    #     host: localhost
    #     user: "{{ ansible_user }}"
    #     password: "{{ ansible_password }}"
    #     input: "{{ hostvars[inventory_hostname] | string | b64encode }}"
    #   when: ('srl' in group_names) and not go

    - name: Run Nokia Go module on local system with Go installed
      go_run:
        host: "{{ inventory_hostname }}"
        user: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        input: "{{ hostvars[inventory_hostname] | string | b64encode }}"
      delegate_to: localhost
      when: ('srl' in group_names) and go

    - name: Run NVIDIA compiled Go module on remote system without Go installed
      go_cvx:
        host: localhost
        user: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        input: "{{ hostvars[inventory_hostname] | string | b64encode }}"
      when: ('cvx' in group_names) and not go

    # - name: Run NVIDIA Go module on local system with Go installed
    #   go_run:
    #     host: "{{ inventory_hostname }}"
    #     user: "{{ ansible_user }}"
    #     password: "{{ ansible_password }}"
    #     input: "{{ hostvars[inventory_hostname] | string | b64encode }}"
    #   delegate_to: localhost
    #   when: ('cvx' in group_names) and go

    - name: Run Arista compiled Go module on remote system without Go installed
      go_eos:
        host: localhost
        user: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        input: "{{ hostvars[inventory_hostname] | string | b64encode }}"
      when: ('eos' in group_names)

- name: Second Play - Validate changes
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Run Validate module on Systems with Go installed
      go_run:
        host: "{{ inventory_hostname }}"
