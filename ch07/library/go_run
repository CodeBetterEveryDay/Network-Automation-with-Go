#!/bin/bash

f=temp.json

# Ansible will run your module and pass it one argument: 
# the name of a file containing the module arguments you specified in your playbook
# https://github.com/pmarkham/writing-ansible-modules-in-bash/blob/master/ansible_bash_modules.md
source $1

if [ -z "$host" ]; then
     printf '{"busy": false, "changed": false, "failed": true, "msg": "missing required arguments: host"}'
     exit 1
fi

if [ -z "$user" ]; then
     printf '{"busy": false, "changed": false, "failed": true, "msg": "missing required arguments: user"}'
     exit 1
fi

if [ -z "$password" ]; then
     printf '{"busy": false, "changed": false, "failed": true, "msg": "missing required arguments: password"}'
     exit 1
fi

if [ -z "$input" ]; then
     printf '{"busy": false, "changed": false, "failed": true, "msg": "missing required arguments: input"}'
     exit 1
fi

config_input=$(printf '%s' "$input" | base64)

# args=$(printf '{"Host": "%s", "User": "%s", "Password": "%s", "Input": "%s"}' \
#  "$host" "$user" "$password" "$config_input")

# go run main.go "${args}"

# Create temp arguments file
printf '{"Host": "%s", "User": "%s", "Password": "%s", "Input": "%s"}' \
 "$host" "$user" "$password" "$config_input" > $f

# Run Go code with this file as an argument
go run main.go $f

# Remove temp arguments file
rm $f